# 지민이는 자신의 저택에서 MN개의 단위 정사각형으로 나누어져 있는 M*N 크기의 보드를 찾았다.
# 어떤 정사각형은 검은색으로 칠해져 있고, 나머지는 흰색으로 칠해져 있다.
# 지민이는 이 보드를 잘라서 8*8 크기의 체스판으로 만들려고 한다.

# 체스판은 검은색과 흰색이 번갈아서 칠해져 있어야 한다.
# 구체적으로, 각 칸이 검은색과 흰색 중 하나로 색칠되어 있고,
# 변을 공유하는 두 개의 사각형은 다른 색으로 칠해져 있어야 한다.
# 따라서 이 정의를 따르면 체스판을 색칠하는 경우는 두 가지뿐이다.
# 하나는 맨 왼쪽 위 칸이 흰색인 경우, 하나는 검은색인 경우이다.

# 보드가 체스판처럼 칠해져 있다는 보장이 없어서,
# 지민이는 8*8 크기의 체스판으로 잘라낸 후에 몇 개의 정사각형을 다시 칠해야겠다고 생각했다.
# 당연히 8*8 크기는 아무데서나 골라도 된다.
# 지민이가 다시 칠해야 하는 정사각형의 최소 개수를 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 N과 M이 주어진다. N과 M은 8보다 크거나 같고, 50보다 작거나 같은 자연수이다.
# 둘째 줄부터 N개의 줄에는 보드의 각 행의 상태가 주어진다. B는 검은색이며, W는 흰색이다.

# 출력
# 첫째 줄에 지민이가 다시 칠해야 하는 정사각형 개수의 최솟값을 출력한다.

import sys

n, m=map(int, sys.stdin.readline().split())

board=[]
for i in range(n):
    board.append(sys.stdin.readline().strip('\n'))

result=[]

for j in range(n-7): # 8, 8로 떼어내도
    for k in range(m-7): # 벗어나지 않는 범위 내에서
        idx1, idx2=0, 0
        for h in range(j, j+8): # 8, 8의 범위를
            for t in range(k, k+8): # 조사한다.
                if (h+t)%2==0: # 좌표의 합이 짝수일 때((0, 0), (0, 2), ..., (1, 1) 이런식으로.)
                    # 'W'와 'B'의 갯수를 센다.
                    if board[h][t]!='W':idx1+=1 # case 1 : 'W'부터 시작하는 경우
                    if board[h][t]!='B':idx2+=1 # case 2: 'B'부터 시작하는 경우
                else: # 좌표의 합이 홀수일 때, 위의 반대의 경우, 즉, 짝수일 때 'W'였다면 'B', 홀수일 때 'B'였다면 'W'의 갯수를 센다.)
                    if board[h][t]!='B':idx1+=1 # case 1 : 'W'부터 시작하는 경우
                    if board[h][t]!='W':idx2+=1 # case 2: 'B'부터 시작하는 경우
        result.append(idx1)
        result.append(idx2)

print(min(result))